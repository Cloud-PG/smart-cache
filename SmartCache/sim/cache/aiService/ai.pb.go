// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ai.proto

package aiservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AIInput struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	SiteName             string   `protobuf:"bytes,2,opt,name=siteName,proto3" json:"siteName,omitempty"`
	DataType             string   `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	FileType             string   `protobuf:"bytes,4,opt,name=fileType,proto3" json:"fileType,omitempty"`
	UserID               uint32   `protobuf:"varint,5,opt,name=userID,proto3" json:"userID,omitempty"`
	NumReq               uint32   `protobuf:"varint,6,opt,name=numReq,proto3" json:"numReq,omitempty"`
	AvgTime              float32  `protobuf:"fixed32,7,opt,name=avgTime,proto3" json:"avgTime,omitempty"`
	Size                 float32  `protobuf:"fixed32,8,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AIInput) Reset()         { *m = AIInput{} }
func (m *AIInput) String() string { return proto.CompactTextString(m) }
func (*AIInput) ProtoMessage()    {}
func (*AIInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bdfe6a5fd51d81f, []int{0}
}

func (m *AIInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AIInput.Unmarshal(m, b)
}
func (m *AIInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AIInput.Marshal(b, m, deterministic)
}
func (m *AIInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AIInput.Merge(m, src)
}
func (m *AIInput) XXX_Size() int {
	return xxx_messageInfo_AIInput.Size(m)
}
func (m *AIInput) XXX_DiscardUnknown() {
	xxx_messageInfo_AIInput.DiscardUnknown(m)
}

var xxx_messageInfo_AIInput proto.InternalMessageInfo

func (m *AIInput) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *AIInput) GetSiteName() string {
	if m != nil {
		return m.SiteName
	}
	return ""
}

func (m *AIInput) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *AIInput) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *AIInput) GetUserID() uint32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *AIInput) GetNumReq() uint32 {
	if m != nil {
		return m.NumReq
	}
	return 0
}

func (m *AIInput) GetAvgTime() float32 {
	if m != nil {
		return m.AvgTime
	}
	return 0
}

func (m *AIInput) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type StorePrediction struct {
	Store                bool     `protobuf:"varint,1,opt,name=store,proto3" json:"store,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorePrediction) Reset()         { *m = StorePrediction{} }
func (m *StorePrediction) String() string { return proto.CompactTextString(m) }
func (*StorePrediction) ProtoMessage()    {}
func (*StorePrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bdfe6a5fd51d81f, []int{1}
}

func (m *StorePrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorePrediction.Unmarshal(m, b)
}
func (m *StorePrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorePrediction.Marshal(b, m, deterministic)
}
func (m *StorePrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorePrediction.Merge(m, src)
}
func (m *StorePrediction) XXX_Size() int {
	return xxx_messageInfo_StorePrediction.Size(m)
}
func (m *StorePrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_StorePrediction.DiscardUnknown(m)
}

var xxx_messageInfo_StorePrediction proto.InternalMessageInfo

func (m *StorePrediction) GetStore() bool {
	if m != nil {
		return m.Store
	}
	return false
}

func init() {
	proto.RegisterType((*AIInput)(nil), "aiservice.AIInput")
	proto.RegisterType((*StorePrediction)(nil), "aiservice.StorePrediction")
}

func init() { proto.RegisterFile("ai.proto", fileDescriptor_4bdfe6a5fd51d81f) }

var fileDescriptor_4bdfe6a5fd51d81f = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x4b, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x71, 0xe9, 0x23, 0x1d, 0xf1, 0x90, 0x2c, 0x84, 0xac, 0xac, 0xa2, 0x6c, 0xc8, 0x02,
	0x79, 0x01, 0x17, 0x20, 0x85, 0x4d, 0x16, 0x40, 0x95, 0xf6, 0x02, 0x26, 0x1d, 0xca, 0x48, 0xe4,
	0x81, 0xe3, 0x54, 0x82, 0x8b, 0x72, 0x1d, 0x64, 0x3b, 0x09, 0x88, 0x5d, 0xbe, 0xff, 0x8b, 0x67,
	0xe4, 0xdf, 0x10, 0x28, 0x92, 0x8d, 0xae, 0x4d, 0xcd, 0x97, 0x8a, 0x5a, 0xd4, 0x07, 0x2a, 0x30,
	0xfe, 0x66, 0xb0, 0x48, 0xb3, 0xac, 0x6a, 0x3a, 0xc3, 0x43, 0x08, 0x5e, 0xe9, 0x1d, 0x2b, 0x55,
	0xa2, 0x60, 0x11, 0x4b, 0x96, 0xf9, 0xc8, 0xd6, 0xb5, 0x64, 0xf0, 0xc9, 0xba, 0x89, 0x77, 0x03,
	0x5b, 0xb7, 0x53, 0x46, 0x6d, 0x3f, 0x1b, 0x14, 0xc7, 0xde, 0x0d, 0x3c, 0xcc, 0x74, 0x6e, 0xfa,
	0x3b, 0xd3, 0xb9, 0x4b, 0x98, 0x77, 0x2d, 0xea, 0xec, 0x41, 0xcc, 0x22, 0x96, 0x9c, 0xe6, 0x3d,
	0xd9, 0xbc, 0xea, 0xca, 0x1c, 0x3f, 0xc4, 0xdc, 0xe7, 0x9e, 0xb8, 0x80, 0x85, 0x3a, 0xec, 0xb7,
	0x54, 0xa2, 0x58, 0x44, 0x2c, 0x99, 0xe4, 0x03, 0x72, 0x0e, 0xd3, 0x96, 0xbe, 0x50, 0x04, 0x2e,
	0x76, 0xdf, 0xf1, 0x15, 0x9c, 0x6f, 0x4c, 0xad, 0x71, 0xad, 0x71, 0x47, 0x85, 0xa1, 0xba, 0xe2,
	0x17, 0x30, 0x6b, 0x6d, 0xe4, 0x6e, 0x17, 0xe4, 0x1e, 0x6e, 0x1e, 0x61, 0x99, 0x66, 0x1b, 0xdf,
	0x07, 0xbf, 0x83, 0x93, 0x34, 0xeb, 0x8f, 0x3c, 0x57, 0xc8, 0xb9, 0x1c, 0xbb, 0x92, 0x7d, 0x4f,
	0x61, 0xf8, 0x27, 0xfb, 0xb7, 0x22, 0x3e, 0x5a, 0x5d, 0x83, 0xa0, 0x5a, 0xee, 0x75, 0x53, 0xc8,
	0x42, 0x15, 0x6f, 0x28, 0x15, 0xc9, 0xfe, 0xef, 0xd5, 0xd9, 0xbd, 0x4d, 0xc6, 0x6d, 0x6b, 0xf6,
	0x32, 0x77, 0x2f, 0x72, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x41, 0xff, 0x8e, 0x0c, 0x9d, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AIServiceClient is the client API for AIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AIServiceClient interface {
	// Make 1 prediction only
	AIPredictOne(ctx context.Context, in *AIInput, opts ...grpc.CallOption) (*StorePrediction, error)
}

type aIServiceClient struct {
	cc *grpc.ClientConn
}

func NewAIServiceClient(cc *grpc.ClientConn) AIServiceClient {
	return &aIServiceClient{cc}
}

func (c *aIServiceClient) AIPredictOne(ctx context.Context, in *AIInput, opts ...grpc.CallOption) (*StorePrediction, error) {
	out := new(StorePrediction)
	err := c.cc.Invoke(ctx, "/aiservice.AIService/AIPredictOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AIServiceServer is the server API for AIService service.
type AIServiceServer interface {
	// Make 1 prediction only
	AIPredictOne(context.Context, *AIInput) (*StorePrediction, error)
}

// UnimplementedAIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAIServiceServer struct {
}

func (*UnimplementedAIServiceServer) AIPredictOne(ctx context.Context, req *AIInput) (*StorePrediction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AIPredictOne not implemented")
}

func RegisterAIServiceServer(s *grpc.Server, srv AIServiceServer) {
	s.RegisterService(&_AIService_serviceDesc, srv)
}

func _AIService_AIPredictOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AIInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AIServiceServer).AIPredictOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aiservice.AIService/AIPredictOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AIServiceServer).AIPredictOne(ctx, req.(*AIInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _AIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aiservice.AIService",
	HandlerType: (*AIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AIPredictOne",
			Handler:    _AIService_AIPredictOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ai.proto",
}
